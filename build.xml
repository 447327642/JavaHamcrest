<project name="hamcrest" default="all">

    <property name="version" value="SNAPSHOT" description="Version number to use in build files"/>
    <property name="haltonfailure" value="true" description="Whether to halt the build if the tests fail"/>
    <property name="debug" value="true" description="Whether to build with debug information"/>

    <target name="all" depends="clean, package" description="Performs clean build, runs tests and packages for distribution"/>

    <target name="clean" description="Clean up all built files">
        <delete dir="build"/>
    </target>

    <target name="generator" description="Build code generator tool">
        <java-to-jar srcdir="hamcrest-generator/src/main/java"
                     modulename="hamcrest-generator-${version}-nodeps"
                     classpath="lib/generator/qdox-1.12.jar"/>

        <!-- Bundle QDox classes in hamcrest-generator.jar using JarJar to place classes under a different package -->
        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="lib/generator/jarjar-1.3.jar"/>
        <jarjar jarfile="build/hamcrest-generator-${version}.jar">
            <zipfileset src="build/hamcrest-generator-${version}-nodeps.jar"/>
            <zipfileset src="lib/generator/qdox-1.12.jar"/>
            <rule pattern="com.thoughtworks.qdox.**" result="org.hamcrest.generator.qdox.@1"/>
        </jarjar>
        <copy file="build/hamcrest-generator-${version}-nodeps-sources.jar" tofile="build/hamcrest-generator-${version}-sources.jar"/>
    </target>

    <target name="core" depends="generator" description="Build core Hamcrest library">
        <java-to-jar srcdir="hamcrest-core/src/main/java" modulename="hamcrest-core-${version}"/>

        <!-- Generate one class with all static imports -->
        <mkdir dir="build/temp/hamcrest-core/generated-code"/>

        <java classname="org.hamcrest.generator.config.XmlConfigurator"
              fork="yes"
              failonerror="yes"
              classpath="
                build/hamcrest-core-${version}.jar;
                build/hamcrest-generator-${version}.jar;
              ">
            <arg value="core-matchers.xml"/>
            <arg value="hamcrest-core/src/main/java"/>
            <arg value="org.hamcrest.CoreMatchers"/>
            <arg value="build/temp/hamcrest-core/generated-code"/>
        </java>
        <!-- Append to core jar -->
        <java-to-jar srcdir="build/temp/hamcrest-core/generated-code"
                     modulename="hamcrest-core-${version}"
                     classpath="build/hamcrest-core-${version}.jar"/>
    </target>

    <target name="library"
            depends="core,generator"
            description="Build library of matchers">
        <mkdir dir="build/temp/hamcrest-library/generated-code"/>
        <java-to-jar srcdir="hamcrest-library/src/main/java"
                     modulename="hamcrest-library-${version}"
                     classpath="build/hamcrest-core-${version}.jar"/>
        <!-- Generate one class with all static imports -->
        <java classname="org.hamcrest.generator.config.XmlConfigurator"
              fork="yes"
              failonerror="yes"
              classpath="
                build/hamcrest-core-${version}.jar;
                build/hamcrest-generator-${version}.jar;
                build/hamcrest-library-${version}.jar;
              ">
            <arg value="matchers.xml"/>
            <arg value="hamcrest-core/src/main/java,hamcrest-library/src/main/java"/>
            <arg value="org.hamcrest.Matchers"/>
            <arg value="build/temp/hamcrest-library/generated-code"/>
        </java>
        <!-- Append to library jar -->
        <java-to-jar srcdir="build/temp/hamcrest-library/generated-code"
                     modulename="hamcrest-library-${version}"
                     classpath="build/hamcrest-core-${version}.jar"/>
    </target>

    <target name="integration" depends="core, library" description="Build integration with external tools">
        <java-to-jar srcdir="hamcrest-integration/src/main/java" modulename="hamcrest-integration-${version}"
                     classpath="
                        build/hamcrest-core-${version}.jar;
                        build/hamcrest-library-${version}.jar"/>
    </target>
    
    <target name="unit-test" depends="core, library, integration, generator" description="Build and run unit tests.">
        <java-to-jar srcdir="hamcrest-unit-test/src/main/java" modulename="hamcrest-unit-test-${version}"
                     classpath="
                        build/hamcrest-core-${version}.jar;
                        build/hamcrest-library-${version}.jar;
                        build/hamcrest-integration-${version}.jar;
                        build/hamcrest-generator-${version}.jar"/>
        <junit printsummary="no" fork="no" haltonfailure="${haltonfailure}">
            <formatter type="brief" usefile="no"/>
            <classpath>
                <fileset dir="lib/integration">
                    <include name="*.jar"/>
                </fileset>
                <pathelement path="build/hamcrest-core-${version}.jar"/>
                <pathelement path="build/hamcrest-library-${version}.jar"/>
                <pathelement path="build/hamcrest-integration-${version}.jar"/>
                <pathelement path="build/hamcrest-generator-${version}.jar"/>
                <pathelement path="build/hamcrest-unit-test-${version}.jar"/>
            </classpath>
            <batchtest>
                <fileset dir="hamcrest-unit-test/src/main/java">
                    <include name="**/*Test*"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="examples" depends="core, library, integration" description="Build and run unit tests.">
        <java-to-jar srcdir="hamcrest-examples/src/main/java"
                     modulename="hamcrest-examples-${version}"
                     classpath="
                        build/hamcrest-core-${version}.jar;
                        build/hamcrest-library-${version}.jar;
                        build/hamcrest-integration-${version}.jar"/>
    </target>

    <target name="bigjar" depends="core, library, integration, generator"
            description="Build a single Jar (hamcrest-all.jar) that contains core, library, generator and integration.">
        <jar jarfile="build/hamcrest-all-${version}.jar" duplicate="preserve">
            <zipfileset src="build/hamcrest-core-${version}.jar"/>
            <zipfileset src="build/hamcrest-library-${version}.jar"/>
            <zipfileset src="build/hamcrest-generator-${version}.jar"/>
            <zipfileset src="build/hamcrest-integration-${version}.jar"/>
        </jar>
    </target>

    <target name="package" depends="core, generator, library, integration, bigjar, unit-test, examples" description="Package for distribution">
        <zip zipfile="build/hamcrest-${version}.zip">
            <zipfileset dir="." prefix="hamcrest-${version}">
                <include name="hamcrest-*/**"/>
                <include name="lib/**"/>
                <include name="*.txt"/>
                <include name="build.xml"/>
                <include name="*matchers.xml"/>
            </zipfileset>
            <zipfileset dir="build" prefix="hamcrest-${version}">
                <include name="hamcrest-core-${version}.jar"/>
                <include name="hamcrest-generator-${version}.jar"/>
                <include name="hamcrest-library-${version}.jar"/>
                <include name="hamcrest-integration-${version}.jar"/>
                <include name="hamcrest-all-${version}.jar"/>
            </zipfileset>
        </zip>
        <tar tarfile="build/hamcrest-${version}.tgz" compression="gzip" longfile="gnu">
            <tarfileset  dir="." prefix="hamcrest-${version}">
                <include name="hamcrest-*/**"/>
                <include name="lib/**"/>
                <include name="*.txt"/>
                <include name="build.xml"/>
                <include name="*matchers.xml"/>
            </tarfileset>
            <tarfileset dir="build" prefix="hamcrest-${version}">
                <include name="hamcrest-core-${version}.jar"/>
                <include name="hamcrest-generator-${version}.jar"/>
                <include name="hamcrest-library-${version}.jar"/>
                <include name="hamcrest-integration-${version}.jar"/>
                <include name="hamcrest-all-${version}.jar"/>
            </tarfileset>
        </tar>
    </target>

    <target name="javadoc" depends="library">
        <mkdir dir="build/javadoc"/>
        <javadoc destdir="build/javadoc" source="1.6" failonerror="yes" overview="overview.html">
            <classpath>
                <fileset dir="lib/integration">
                    <include name="*.jar"/>
                </fileset>
            </classpath>

            <packageset dir="hamcrest-core/src/main/java"/>
            <packageset dir="hamcrest-library/src/main/java" excludes="org/hamcrest/internal"/>
            <packageset dir="hamcrest-integration/src/main/java"/>
            <packageset dir="build/temp/hamcrest-core/generated-code"/>
            <packageset dir="build/temp/hamcrest-library/generated-code"/>
            
            <group title="Hamcrest API and Utility Classes" packages="org.hamcrest"/>
            <group title="Matcher Library" packages="org.hamcrest.*"/>
            <group title="Integration" packages="org.hamcrest.integration, org.hamcrest.integration.*"/>
            
            <link offline="false" href="http://www.junit.org/junit/javadoc/3.8.1/"/>
            <link offline="false" href="http://kentbeck.github.com/junit/javadoc/latest/"/>
        </javadoc>
    </target>

    <macrodef name="java-to-jar" description="Compile Java source for a module and build a Jar">
        <attribute name="srcdir" description="Directory containg Java source"/>
        <attribute name="modulename" description="Name of the module to jar"/>
        <attribute name="classpath" description="Anything additional to add on the classpath" default=""/>
        <sequential>
            <mkdir dir="build/temp/@{modulename}.jar.contents"/>
            <javac srcdir="@{srcdir}" destdir="build/temp/@{modulename}.jar.contents" debug="${debug}" target="1.5">
                <classpath>
                    <fileset dir="lib/integration">
                        <include name="*.jar"/>
                    </fileset>
                    <pathelement path="@{classpath}"/>
                </classpath>
            </javac>
            <copy file="LICENSE.txt" todir="build/temp/@{modulename}.jar.contents"/>
            <jar jarfile="build/@{modulename}.jar">
                <fileset dir="build/temp/@{modulename}.jar.contents"/>
            </jar>
            <copy file="LICENSE.txt" todir="build/temp/@{modulename}.jar.contents"/>

            <!-- Build sources jar -->
            <copy todir="build/temp/@{modulename}-sources.jar.contents">
                <fileset dir="@{srcdir}"/>
            </copy>
            <jar jarfile="build/@{modulename}-sources.jar">
                <fileset dir="build/temp/@{modulename}-sources.jar.contents"/>
            </jar>
        </sequential>
    </macrodef>

</project>
